version: "3.8"

env_file:
  - path: ./.env
    required: true

services:
  frontend:
    build:
      context:  ./client/
      dockerfile: Dockerfile
    restart: always
    ports:
      - ${FRONTEND_PORT}:3000
    networks:
      - outgoing
      - internal
  backend:
    build:
      context: ./server/
      dockerfile: Dockerfile
    restart: always
    ports:
      - ${BACKEND_PORT}:8080
    depends_on:
      database:
        condition: service_healthy
    networks: 
      - outgoing
      - internal
    environment:
      DATABASE_CONNECTION_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:${DATABASE_PORT}/${POSTGRES_DB}
    secrets:
      - spotify_client_id
      - spotify_client_secret
  database:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d data"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - internal

secrets:
  spotify_client_id:
    file: ./secret_spotify_client_id.txt
  spotify_client_secret:
    file: ./secret_spotify_client_secret.txt

volumes:
  data:

networks:
  outgoing:
    driver: bridge
  internal:
    driver: bridge
{
    "root": true,
    "env": {
        "browser": true,
        "node": true,
        "es6": true
    },
    "extends": [
        "next/core-web-vitals",
        "eslint:recommended",
        "prettier",
        "plugin:testing-library/react",
        "plugin:jest-dom/recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended"
    ],
    "rules": {
        "indent": ["warn", 4], // Enforces consistent indentation using two spaces per indent level.
        // "semi": ["warn", "always"], // Requires semicolons at the end of statements.
        "quotes": ["warn", "single"], // Enforces the use of single quotes for string literals.
        "no-var": "warn", // Disallows the use of var keyword for variable declarations, promoting let and const instead.
        "no-unused-vars": "warn", // Flags unused variables, helping to identify potential code issues.
        "@typescript-eslint/no-unused-vars": "warn",
        "prefer-arrow-callback": "warn", // Encourages the use of arrow function expressions over traditional function expressions for callbacks.
        "arrow-parens": ["warn", "always"], // Requires parentheses around parameters in arrow function expressions.
        "eqeqeq": "warn", // Requires the use of strict equality (=== and !==) instead of loose equality (== and !=).
        "block-scoped-var": "warn", // Warns against the use of var in block-scoped variables.
        "no-empty-function": "warn", // Flags empty function declarations and expressions.
        "no-extra-boolean-cast": "warn", // Disallows unnecessary double negation (!!) in boolean contexts.
        "no-console": "warn", // Disallows the use of console statements, encouraging the use of proper logging mechanisms in production code.
        "@typescript-eslint/explicit-module-boundary-types": "off", // Disable explicit module boundary types for Next.js API routes
        "react/prop-types": "off", // Disable prop-types validation for TypeScript projects
        "react/react-in-jsx-scope": "off", // Not required in Next.js
        "react/display-name": "off", // Allow missing display names for functional components
        "@typescript-eslint/explicit-function-return-type": [
            "warn",
            {
                "allowExpressions": true
            }
        ], // Enforce explicit return types for functions except for expressions
        "@typescript-eslint/no-explicit-any": "off" // Allowing explicit any for cases like JSON parsing where TypeScript inference is limited
    },
    "parser": "@typescript-eslint/parser",
    "plugins": ["testing-library", "jest-dom", "react", "prettier"]
}
